<diagram program="umletino" version="14.4.0-SNAPSHOT"><zoom_level>10</zoom_level><help_text>Space for diagram note</help_text><element><id>UMLClass</id><coordinates><x>590</x><y>210</y><w>410</w><h>350</h></coordinates><panel_attributes>Board
--
- size : int = 9
- boardSize : int
- matrix : vector&lt;vector&lt;shared_ptr&lt;MotherCell&gt; &gt; &gt;
- players : vector&lt;shared_ptr&lt;Player&gt; &gt;
- currentPlayer : int = 0
- end : bool = false
--
+ Board(int size)
+ getBoardSize() const : int
+ getPlayers() const : vector&lt;shared_ptr&lt;Player&gt; &gt;
+ getMatrix() const : vector&lt;vector&lt;shared_ptr&lt;MotherCell&gt; &gt; &gt;
+ placeWall(string &amp;direction, Position &amp;pos) : void
+ executeMove(string &amp;typeOfMove, Position &amp;pos, int currentP) : void
+ checkWall(Position &amp;playerPos, Position nextCell) : bool
+ isValid(string &amp;typeOfMove, Position &amp;move, Position &amp;playerPos) : bool
+ checkInput(string &amp;input, int currentP) : bool
+ bindCells() : void
+ newGame() : void
+ isEnd() const : void
+ face2Face(Position &amp;nextPos, int currentP) : bool
+ jumpOver(Position &amp;nextPos, int currentP) : bool
+ diagonalMove(Position &amp;nextPos, int currentP) : bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>400</x><y>590</y><w>440</w><h>150</h></coordinates><panel_attributes>MotherCell
--
# cellPiece : shared_ptr&lt;Piece&gt;
# neighbours : vector&lt;shared_ptr&lt;MotherCell&gt; &gt; = {nullptr, nullptr, nullptr, nullptr}
--
+ getPiece() : virtual shared_ptr&lt;Piece&gt;
+ setPiece(shared_ptr&lt;Piece&gt; piece) : virtual void
+ occupied() : bool
+ setNeighbours(vector&lt;shared_ptr&lt;MotherCell&gt; &gt; &amp;neighboursVector) : void
+ getNeighbour(Position &amp;neighbourPos) : shared_ptr&lt;MotherCell&gt;
+ getNeighbour(int size) : shared_ptr&lt;MotherCell&gt;</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>390</x><y>820</y><w>240</w><h>60</h></coordinates><panel_attributes>PawnCell
--
+ getPiece() : shared_ptr&lt;Piece&gt;
+ setPiece(shared_ptr&lt;Piece&gt; piece) : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>660</x><y>820</y><w>240</w><h>60</h></coordinates><panel_attributes>WallCell
--
+ getPiece() : shared_ptr&lt;Piece&gt;
+ setPiece(shared_ptr&lt;Piece&gt; piece) : void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>100</x><y>480</y><w>200</w><h>70</h></coordinates><panel_attributes>Piece
--
+ getPos() : virtual Position
+ setPos(Position pos) : virtual void
+ ~Piece() : virtual</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>270</y><w>230</w><h>120</h></coordinates><panel_attributes>Wall
--
- position : Position
- direction : string
--
+ Wall(Position position, string direction)
+ getPos() : Position
+ setPos(Position pos) : void
+ isHwall() : bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>650</x><y>730</y><w>150</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;60;130;60;130;90</additional_attributes></element><element><id>Relation</id><coordinates><x>510</x><y>730</y><w>170</w><h>110</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>150;10;150;60;10;60;10;90</additional_attributes></element><element><id>Relation</id><coordinates><x>610</x><y>550</y><w>30</w><h>60</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;40</additional_attributes></element><element><id>UMLClass</id><coordinates><x>340</x><y>290</y><w>160</w><h>90</h></coordinates><panel_attributes>Pawn
--
- position : Position
--
+ Pawn(Position position) 
+ getPos() : Position
+ setPos(Position pos) : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>160</x><y>10</y><w>230</w><h>170</h></coordinates><panel_attributes>Player
--
- id : int
- pawn : shared_ptr&lt;Pawn&gt;
- walls : int = 10
--
+ Player(int id, shared_ptr&lt;Pawn&gt; pawn)
+ getPawn() : shared_ptr&lt;Pawn&gt;
+ getPawnPos() : Position
+ setPawnPos(Position pos) : void
+ useWall() : void
+ hasWalls() const : bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>628</x><y>0</y><w>320</w><h>120</h></coordinates><panel_attributes>Game
--
- model : shared_ptr&lt;Board&gt;
- view : unique_ptr&lt;DisplayBoard&gt;
--
+ Game(shared_ptr&lt;Board&gt; model, DisplayBoard&amp; view)
+ getInput() : static string
+ inputFormat() : void
+ start() : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>780</x><y>110</y><w>90</w><h>120</h></coordinates><panel_attributes>lt=-
m1=1
m2=1
modifies &gt;</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>Relation</id><coordinates><x>350</x><y>170</y><w>70</w><h>140</h></coordinates><panel_attributes>lt=-
m1=1
m2=1..2
owns &gt;</panel_attributes><additional_attributes>10;10;10;120</additional_attributes></element><element><id>Relation</id><coordinates><x>380</x><y>50</y><w>270</w><h>50</h></coordinates><panel_attributes>lt=-
m1=2..4
m2=1
&lt; ask input</panel_attributes><additional_attributes>10;20;250;20</additional_attributes></element><element><id>Relation</id><coordinates><x>290</x><y>500</y><w>200</w><h>110</h></coordinates><panel_attributes>lt=-
m1=1
m2=1
&lt; occupied by </panel_attributes><additional_attributes>10;20;170;20;170;90</additional_attributes></element><element><id>Relation</id><coordinates><x>154</x><y>380</y><w>70</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>50;100;50;60;10;60;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>194</x><y>370</y><w>210</w><h>130</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;110;10;70;190;70;190;10</additional_attributes></element><element><id>Relation</id><coordinates><x>200</x><y>170</y><w>70</w><h>120</h></coordinates><panel_attributes>lt=-
m1=1
m2=10
owns &gt;</panel_attributes><additional_attributes>10;10;10;100</additional_attributes></element><element><id>UMLClass</id><coordinates><x>860</x><y>630</y><w>270</w><h>80</h></coordinates><panel_attributes>DisplayBoard
--
- board : const shared_ptr&lt;Board&gt;
--
+ DisplayBoard(const shared_ptr&lt;Board&gt; board)
+ printBoard() const : void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>960</x><y>550</y><w>80</w><h>100</h></coordinates><panel_attributes>lt=-
m1=1
&lt; display</panel_attributes><additional_attributes>10;10;10;80</additional_attributes></element><element><id>UMLClass</id><coordinates><x>90</x><y>660</y><w>270</w><h>210</h></coordinates><panel_attributes>Position
--
- x : int
- y : int
--
+ Position(int x, int y)
+ Position(string pos)
+ setX(int nX) : void
+ setY(int nY) : void
+ getX() const : int
+ getY() const : int
+ operator==(const Position&amp; other) const : bool
+ operator*(int i) : Position
+ operator/(int i) : Position
+ operator-(Position &amp;other) const : Position</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>180</x><y>540</y><w>100</w><h>140</h></coordinates><panel_attributes>lt=-
m1=1
m2=1
&lt; defined by</panel_attributes><additional_attributes>10;10;10;120</additional_attributes></element></diagram>