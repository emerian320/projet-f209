class Database:
    int publicKey;
    int privateKey;
  public:

    void signUp() {
        Créer un nouveau compte dans la base de données (fichier ecnrypté RSA);
    }
    
    bool login() {
        Cherche si le compte existe dans la base de données, renvoie True si le compte existe, False sinon
    }

    bool prompt() {
        demande a l'utilisateur s'il souhaite s'inscrire ou se connecter:
        if signup {
            signUp;
            return True;
        }
        else {
            return login;
        }
    }

    void saveGame(UserAccount, saveName) {
        Sauvegarde une partie dans le fichier du compte correspondant a l'hote de la partie;
    }

    void loadGame(UserAccount, saveName) {
        vérifie s'il existe une sauvegarde du nom saveName dans le fichier lié au UserAccount;
    }

    void deleteSave(UserAccount, saveName) {
        Détruit une sauvegarde du nom saveName dans le fichier lié au UserAccount;
    }

    void deleteAccount(UserAccount) {
        efface le fichier lié au UserAccount et tout les profils-ami des autres comptes qui correspondent au UserAccount;
        renovie vers la demande prompt();
    }

    void addFriend(UserAccount, FriendAccount) {
        UserAccount demande FriendAccount en ami;
    }

    void acceptFriend(UserAccount, FriendAccount, bool isAccepted) {
        accepte ou refuse la demande en ami de FriendAccount envoyé a UserAccount;
    }

    void deleteFriend(UserAccount, FriendAccount) {
        effaces FriendAccount de la liste d'amirs de UserAccount;
    }